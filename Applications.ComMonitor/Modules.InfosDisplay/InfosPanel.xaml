<UserControl x:Class="Modules.InfosDisplay.InfosPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:tree ="clr-namespace:Hazelor.Infrastructure.Tools.TreeDisplay;assembly=Hazelor.Infrastructure.Tools"
             xmlns:Inf="clr-namespace:Commons.Infrastructure.Layout;assembly=Commons.Infrastructure"
             xmlns:tool="clr-namespace:Modules.InfosDisplay.Tool"
             xmlns:converter="clr-namespace:Modules.InfosDisplay.converters"
             xmlns:infconv ="clr-namespace:Commons.Infrastructure.Converters;assembly=Commons.Infrastructure"
             xmlns:Map="clr-namespace:Hazelor.MapCtrl;assembly=Hazelor.MapCtrl"
             xmlns:Nodes="clr-namespace:Modules.InfosDisplay.Nodes"
             xmlns:Lines="clr-namespace:Modules.InfosDisplay.Lines"
             Loaded="OnLoadMap"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="CheckRadioFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="Green" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NoCheckRadioFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="LightBlue" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderCheckBox" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width"  Value="110"/>
            <Setter Property="Margin" Value="1,2,1,2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="StoryboardIsChecked">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="55"/>
                                    <!--行程-->
                                </DoubleAnimationUsingKeyFrames>
                            
                            </Storyboard>
                            <Storyboard x:Key="StoryboardIsCheckedOff">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="55"/>
                                    <!--行程-->
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                        
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                            <BulletDecorator.Bullet>
                                <Border x:Name="ForegroundPanel" BorderThickness="1" Width="110" Height="35" CornerRadius="10">
                                    <!--长度-->
                                    <Canvas>
                                        <Border Background="White" x:Name="CheckFlag" CornerRadius="10" VerticalAlignment="Center" BorderThickness="1" Width="55" Height="35" RenderTransformOrigin="0.5,0.5" Canvas.Top="-1">
                                            <!--圆点宽度-->
                                            <Border.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Border.RenderTransform>
                                            <Border.Effect>
                                                <DropShadowEffect ShadowDepth="5" Direction="180" />
                                            </Border.Effect>
                                        </Border>
                                        <TextBlock x:Name="CheckTitleOn" Foreground="White" Text="全网" Canvas.Top="6" Canvas.Left="13" FontSize="15"/>
                                        <TextBlock x:Name="CheckTitleOff" Foreground="White" Width="Auto" Canvas.Left="72.946" Canvas.Top="6" Text="路由" FontSize="15"/>
                                    </Canvas>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="false">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                                <Setter Property="Padding" Value="4,0,0,0"/>
                            </Trigger>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource NoCheckRadioFocusVisual}"/>
                                <Setter Property="Padding" Value="4,0,0,0"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Lime"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Foreground" Value="Red"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ForegroundPanel" Property="Background" Value="Lime" />
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="BeginStoryboardCheckedTrue" Storyboard="{StaticResource StoryboardIsChecked}" />
                                    <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedFalse" />
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="ForegroundPanel" Property="Background" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.MenuHighlightColorKey}}"/>
                                    </Setter.Value>
                                </Setter>

                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="BeginStoryboardCheckedFalse" Storyboard="{StaticResource StoryboardIsCheckedOff}" />
                                    <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedTrue" />
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <converter:LineNameConverter x:Key="LineNameConverter"/>
        <converter:BacNameConverter x:Key="BacNameConverter"/>
        <converter:PreNameConverter x:Key="PreNameConverter"/>
        <converter:InfoQualityConverter x:Key="InfoQualityConverter"/>
        <converter:SignalNoiseRatioConverter x:Key="SignalNoiseRatioConverter"/>
        <converter:WhiteInfoQualityConverter x:Key="WhiteInfoQualityConverter"/>

        <converter:SInfoQualityConverter x:Key="SInfoQualityConverter"/>
        <converter:SSignalNoiseRatioConverter x:Key="SSignalNoiseRatioConverter"/>
        <converter:SWhiteInfoQualityConverter x:Key="SWhiteInfoQualityConverter"/>
        
        <tool:AddrConverter x:Key="AddrConverter"/>
        <tool:LinkInfoVisiableConverter x:Key="LinkInfoVisiableConverter"/>
        <tool:AddrListConverter x:Key="AddrListConverter"/>
        <converter:ItemVisibleConverter x:Key="ItemVisibleConverter"/>
        <converter:DBConverter x:Key="DBConverter"/>
        <converter:InfoDisConverter x:Key="InfoDisConverter"/>
        <infconv:VisibleConverter x:Key="VisibleConverter"/>
        <SolidColorBrush x:Key="BackgroundBrush" Color="#C222" />
        <PathGeometry x:Key="FlightMonitor1">
            M3.658,0.284L23.656,0.284C25.514,0.284,27.032,1.802,27.032,3.658L27.032,23.656C27.032,25.514,25.514,27.032,23.656,27.032L3.658,27.032C1.802,27.032,0.283,25.514,0.283,23.656L0.283,3.658C0.283,1.802,1.802,0.284,3.658,0.284
        </PathGeometry>
        <PathGeometry x:Key="FlightMonitor2">
            M14.95,6.04L14.956,3.367 16.59,3.372 16.576,6.04z M12.885,6.039L12.889,3.367 14.522,3.367 14.507,6.041z M19.123,6.01L17.042,6.026 17.062,3.371C17.625,3.38 18.232,3.786 18.468,4.291 18.726,4.846 18.881,5.452 19.123,6.01 M3.039,0.775L9.345,0.775C9.842,0.775 9.768,0.547 10.036,0.546 10.355,0.546 10.734,0.534 11.045,0.559L11.043,2.589 3.259,2.605 3.254,2.605 2.958,2.606 2.957,2.605 0.296,2.605C-0.123,2.974 -0.076,3.316 0.296,3.642 0.496,3.755 0.64,3.839 0.64,3.839L3.352,4.839C4.682,5.288 7.471,6.277 7.914,6.422 8.781,6.708 8.625,6.593 8.869,7.221 9.05,7.686 9.695,9.412 9.857,9.73 10.071,10.152 10.414,10.453 10.932,10.453L19.841,10.453C20.052,10.453 20.295,10.305 20.428,10.218 20.642,10.076 20.691,10.01 20.8,9.777 21.205,8.911 20.721,8.042 20.402,7.198L19.286,4.248C19.19,3.988 18.807,3.449 18.625,3.28 18.18,2.868 17.527,2.606 16.871,2.606L11.645,2.607 11.645,0.545C11.935,0.548 12.233,0.537 12.521,0.543 12.912,0.551 12.823,0.775 13.21,0.775L19.72,0.775C20.011,0.775 20.495,0.518 20.139,0.18 19.864,-0.08 19.168,0.018 18.661,0.018L13.535,0.018C13.147,0.016 12.891,0.016 12.735,0.269 12.204,0.265 10.443,0.298 10.033,0.27 9.782,0.253 9.741,0.018 9.386,0.018L3.039,0.018C2.201,0.018,2.053,0.772,3.039,0.775
        </PathGeometry>
        <ControlTemplate x:Key="AnimatedExpanderButtonTemp" TargetType="{x:Type ToggleButton}">
            <Border Background="{TemplateBinding Background}" CornerRadius="15">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Ellipse Name="Circle"
                         Grid.Column="0"
                         Stroke="White"
                         Width="30"
                         Height="30"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         />
                    <Path x:Name="Arrow"
                      Grid.Column="0"
                      Data="M 1,1.5 L 4.5,5 8,1.5"
                      Stroke="White"
                      StrokeThickness="2"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      RenderTransformOrigin="0.5,0.5"
                      >
                        <Path.RenderTransform>
                            <RotateTransform Angle="270">
                            </RotateTransform>
                        </Path.RenderTransform>
                    </Path>
                </Grid>
            </Border>

            <ControlTemplate.Triggers>
                <!-- Animate arrow when toggled-->
                <Trigger Property="IsChecked"
                         Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="90"
                                                 Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="270"
                                                 Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

                <!-- MouseOver, Pressed behaviours-->
                <Trigger Property="IsMouseOver"
                                 Value="true">
                    <Setter Property="Stroke"
                                    Value="Green"
                                    TargetName="Circle"/>
                    <Setter Property="Stroke"
                                    Value="Green"
                                    TargetName="Arrow"/>
                </Trigger>
                <Trigger Property="IsPressed"
                                 Value="true">
                    <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="Circle"/>
                    <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="Circle"/>
                    <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="Arrow"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="StretchyExpanderTemp" TargetType="{x:Type Expander}">
            <DockPanel Background="{TemplateBinding Background }">
                <ToggleButton x:Name="ExpanderButton" 
                              DockPanel.Dock="Left"
                              Background="{StaticResource BackgroundBrush}"
                              Template="{StaticResource AnimatedExpanderButtonTemp}"
                              Content="{TemplateBinding Header}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True"
                              Padding="1.5,0">
                </ToggleButton>
                <ContentPresenter x:Name="ExpanderContent"
                                  ContentSource="Content"
                                  DockPanel.Dock="Right"
                                  >
                    <ContentPresenter.LayoutTransform>
                        <ScaleTransform ScaleX="0"/>
                    </ContentPresenter.LayoutTransform>
                </ContentPresenter>
            </DockPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                 Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleX)"                                                 
                                                 To="1"
                                                 Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                 Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleX)"
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>

        
        <DataTemplate x:Key="AddrT">
            <TextBlock x:Name="AddrDisplay"
                       Text="{Binding Path=DataContext, ElementName=AddrDisplay, Converter={StaticResource AddrConverter}}"/>
        </DataTemplate>
        <DataTemplate x:Key="AddrListT">
            <TextBlock x:Name="AddrListDisplay"
                       Text="{Binding Path=DataContext, ElementName=AddrListDisplay, Converter={StaticResource AddrListConverter}}"/>
        </DataTemplate>
        <DataTemplate x:Key="NumberT">
            <TextBlock x:Name="NumberDisplay"
                       Text="{Binding Path=DataContext, ElementName=AddrDisplay}"/>
        </DataTemplate>
        <Style TargetType="{x:Type Label}" x:Key="MLabel2Style">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Grid Height="30">
                            <Image Source="./images/LabelBackGround2.png"/>
                            <TextBlock Text="{TemplateBinding Content}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--TextBox Style-->
        <Style TargetType="{x:Type TextBlock}" x:Key="MTextBox2Style">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource=".\images\TextBoxBackGround2.png"  Stretch="UniformToFill"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style x:Key="CenterButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Image x:Name="signback" Source="./images/center.png"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.2" TargetName="signback"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Opacity" Value="0.9" TargetName="signback"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.9" TargetName="signback"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MeasureButtonStyle" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Image x:Name="signback" Source="./images/measure.png"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Opacity" Value="0.9" TargetName="signback"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Opacity" Value="0.2" TargetName="signback"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoadButtonStyle" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Image x:Name="signback" Source="./images/road.png"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Opacity" Value="0.9" TargetName="signback"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Opacity" Value="0.2" TargetName="signback"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NodeButtonStyle" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Image x:Name="signback" Source="./images/node.png"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Opacity" Value="0.9" TargetName="signback"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Opacity" Value="0.2" TargetName="signback"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="RadioButton" 
               x:Key="SatelliteStyle"
               >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid>   
                            <Image x:Name="signback" Source="./images/satellite.png"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Opacity" Value="0.9" TargetName="signback"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Opacity" Value="0.2" TargetName="signback"/>
                            </Trigger>
                            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="RadioButton" 
               x:Key="NormalStyle"
               >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid>

                            <Image x:Name="signback"  Source="./images/normal.png" />
                            
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Opacity" Value="0.9" TargetName="signback"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Opacity" Value="0.2" TargetName="signback"/>
                            </Trigger>
                            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Map:MapCanvas x:Name="tileCanvas" Grid.Column="0">
         

        </Map:MapCanvas>
        <Map:NavigationControls  Map="{Binding ElementName=tileCanvas}" Grid.Column="0"/>
        <StackPanel VerticalAlignment="Top" HorizontalAlignment="Right" Width="80" Grid.Column="0">
            <RadioButton Style="{StaticResource SatelliteStyle}" x:Name="SatShowButton" Height="80" Click="SatelliteClick" IsChecked="True"/>
            <RadioButton Style="{StaticResource NormalStyle}" x:Name="NormalShowButton" Height="80" Click="NormalClick" IsChecked="False"/>
            <CheckBox x:Name="RoadShowButton" Height="80" Click="RoadClick" IsChecked="False" Style="{StaticResource RoadButtonStyle}"/>
            <CheckBox x:Name="MeasureButton" Height="80" Click="MeasureClick" IsChecked="False" ToolTip="测距" Style="{StaticResource MeasureButtonStyle}"/>
            <CheckBox x:Name="NodeButton" Height="80" Click="NodeClick" IsChecked="False" ToolTip="选中节点" Style="{StaticResource NodeButtonStyle}"/>

            <Button x:Name="CenterButton" Height="80" Click="CenterClick" ToolTip="居中" Style="{StaticResource CenterButtonStyle}"/>
        </StackPanel>
        <!--数据信息显示-->
        <Expander Grid.Column="1" 
                  Template="{StaticResource StretchyExpanderTemp}"
                  RenderTransformOrigin="0.5,0.5"
                  ExpandDirection="Right"
                  VerticalAlignment="Center"
                  VerticalContentAlignment="Center"
                  Background="{StaticResource BackgroundBrush}">

            <Expander.Content>
                <Grid Width="390" Visibility="Visible">
                    <ScrollViewer Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" 
                                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                  Style="{StaticResource ScrollViewerStyleKey}"
                                      Margin="5">
                        <StackPanel  ScrollViewer.VerticalScrollBarVisibility="Auto"
                                  ScrollViewer.HorizontalScrollBarVisibility="Auto">
                            <GroupBox  ScrollViewer.VerticalScrollBarVisibility="Auto"
                                  ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                <GroupBox.Header>
                                    <Label Foreground="White">节点信息</Label>
                                </GroupBox.Header>
                                <GroupBox.Content>
                                    <Nodes:NodeInfo DataContext="{Binding SelectedNode}" Visibility="Hidden" x:Name="NodeInfo"/>
                                </GroupBox.Content>
                            </GroupBox>
                            
                            <GroupBox  ScrollViewer.VerticalScrollBarVisibility="Auto"
                                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                       Visibility="{Binding IsSelf,Converter={StaticResource VisibleConverter}}">
                                <GroupBox.Header>
                                    <Label Foreground="White">路由信息</Label>
                                </GroupBox.Header>
                                <GroupBox.Content>
                                    <StackPanel>
                                        <CheckBox Style="{StaticResource SliderCheckBox}" IsChecked="{Binding IsAllShow}"/>
                                        <ComboBox x:Name="RouteInfo" ItemsSource="{Binding RoutInfoDecs}"
                                              DisplayMemberPath="RoutName"
                                              
                                              SelectedItem="{Binding SelRoutInfo}"/>
                                        <Border Background="{x:Null}" BorderBrush="White" BorderThickness="2" CornerRadius="4" DataContext="{Binding SelRoutInfo}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="0.6*"/>
                                                    <ColumnDefinition Width="1*"/>
                                                </Grid.ColumnDefinitions>
                                                <Label Grid.Column="0" Grid.Row="0" Margin="5" Style="{StaticResource MLabel2Style}">目标节点</Label>
                                                <TextBlock Grid.Column="1" Grid.Row="0" Margin="5" Text="{Binding DstName}" Foreground="Orange" VerticalAlignment="Center"/>
                                                <Label Grid.Column="0" Grid.Row="1" Margin="5" Style="{StaticResource MLabel2Style}" Visibility="{Binding DataContext.InfoVisible, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}">接口地址</Label>
                                                <TextBlock Grid.Column="1" Grid.Row="1" Margin="5" Text="{Binding InterfaceAddr}" Visibility="{Binding DataContext.InfoVisible, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}" Foreground="Orange" VerticalAlignment="Center"/>
                                                <Label Grid.Column="0" Grid.Row="2" Margin="5" Style="{StaticResource MLabel2Style}" Visibility="{Binding DataContext.InfoVisible, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}">下接口地址</Label>
                                                <TextBlock Grid.Column="1" Grid.Row="2" Margin="5" Text="{Binding NextIfaceAddr}" Visibility="{Binding DataContext.InfoVisible, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}" Foreground="Orange" VerticalAlignment="Center"/>
                                                <Label Grid.Column="0" Grid.Row="3" Margin="5" Style="{StaticResource MLabel2Style}" VerticalAlignment="Top">中继节点</Label>
                                                <TextBlock Grid.Column="1" Grid.Row="3" Margin="5" TextWrapping="Wrap" Text="{Binding NextNames}" Foreground="Orange" VerticalAlignment="Center"/>

                                                <Label Grid.Column="0" Grid.Row="4" Margin="5" Style="{StaticResource MLabel2Style}">路由跳数</Label>
                                                <TextBlock Grid.Column="1" Grid.Row="4" Margin="5" Text="{Binding Dist}" Foreground="Orange" VerticalAlignment="Center"/>
                                                <Label Grid.Column="0" Grid.Row="5" Margin="5" Style="{StaticResource MLabel2Style}" Visibility="{Binding DataContext.InfoVisible, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}">系数</Label>
                                                <TextBlock Grid.Column="1" Grid.Row="5" Margin="5" Text="{Binding Weight}" Visibility="{Binding DataContext.InfoVisible, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}}" Foreground="Orange" VerticalAlignment="Center"/>
                                            </Grid>
                                        </Border>

                                    </StackPanel>

                                </GroupBox.Content>
                            </GroupBox>
                            <!--<GroupBox  ScrollViewer.VerticalScrollBarVisibility="Auto"
                                  ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                <GroupBox.Header>
                                    <Label Foreground="White">链路信息</Label>
                                </GroupBox.Header>
                                <GroupBox.Content>
                                    <ListBox x:Name="LineInfo" DataContext="{Binding SelectedNode}" ItemsSource="{Binding LineInfoOfNode}"
                                     MinHeight="200"
                                    ScrollViewer.VerticalScrollBarVisibility="Auto">
                                        <ListBox.Resources>
                                            <Style TargetType="ListBox">
                                                <Setter Property="Background" Value="Transparent"/>
                                            </Style>
                                        </ListBox.Resources>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Expander Visibility="{Binding IsVisible, Converter={StaticResource LinkInfoVisiableConverter}}">
                                                    <Expander.Header>
                                                        <Label Content="{Binding LineDirection}" Foreground="White"/>
                                                    </Expander.Header>
                                                    <Expander.Content>
                                                        <Border Background="{x:Null}" BorderBrush="White" BorderThickness="2" CornerRadius="4">
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"/>
                                                                    <RowDefinition Height="Auto"/>
                                                                    <RowDefinition Height="Auto"/>
                                                                    <RowDefinition Height="Auto"/>

                                                                </Grid.RowDefinitions>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="0.6*"/>
                                                                    <ColumnDefinition Width="1*"/>
                                                                    <ColumnDefinition Width="0.6*"/>
                                                                    <ColumnDefinition Width="1*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Label Grid.Column="0" Grid.Row="0" Margin="5" Style="{StaticResource MLabel2Style}">前向信号量</Label>
                                                                <TextBlock Grid.Column="1" Grid.Row="0" Margin="5" Text="{Binding PreInfoQuality,Converter={StaticResource InfoDisConverter}}" Foreground="Orange" VerticalAlignment="Center"/>
                                                                <Label Grid.Column="0" Grid.Row="1" Margin="5" Style="{StaticResource MLabel2Style}">前向白噪声</Label>
                                                                <TextBlock Grid.Column="1" Grid.Row="1" Margin="5" Text="{Binding PreWhiteInfoQuality, Converter={StaticResource InfoDisConverter}}" Foreground="Orange" VerticalAlignment="Center"/>
                                                                <Label Grid.Column="0" Grid.Row="2" Margin="5" Style="{StaticResource MLabel2Style}">前向信噪比</Label>
                                                                <TextBlock Grid.Column="1" Grid.Row="2" Margin="5" Text="{Binding PreSignalNoiseRatio, Converter={StaticResource DBConverter}}" Foreground="Orange" VerticalAlignment="Center"/>
                                                                <Label Grid.Column="0" Grid.Row="3" Margin="5" Style="{StaticResource MLabel2Style}">前向使用</Label>
                                                                <TextBlock Grid.Column="1" Grid.Row="3" Margin="5" Text="{Binding PreIsUsed}" Foreground="Orange" VerticalAlignment="Center"/>

                                                                <Label Grid.Column="2" Grid.Row="0" Margin="5" Style="{StaticResource MLabel2Style}">后向信号量</Label>
                                                                <TextBlock Grid.Column="3" Grid.Row="0" Margin="5" Text="{Binding BacInfoQuality,Converter={StaticResource InfoDisConverter}}" Foreground="Orange" VerticalAlignment="Center"/>
                                                                <Label Grid.Column="2" Grid.Row="1" Margin="5" Style="{StaticResource MLabel2Style}">后向白噪声</Label>
                                                                <TextBlock Grid.Column="3" Grid.Row="1" Margin="5" Text="{Binding BacWhiteInfoQuality, Converter={StaticResource InfoDisConverter}}" Foreground="Orange" VerticalAlignment="Center"/>
                                                                <Label Grid.Column="2" Grid.Row="2" Margin="5" Style="{StaticResource MLabel2Style}">后向信噪比</Label>
                                                                <TextBlock Grid.Column="3" Grid.Row="2" Margin="5" Text="{Binding BacSignalNoiseRatio, Converter={StaticResource DBConverter}}" Foreground="Orange" VerticalAlignment="Center"/>
                                                                <Label Grid.Column="2" Grid.Row="3" Margin="5" Style="{StaticResource MLabel2Style}">后向使用</Label>
                                                                <TextBlock Grid.Column="3" Grid.Row="3" Margin="5" Text="{Binding BacIsUsed}" Foreground="Orange" VerticalAlignment="Center"/>

                                                            </Grid>
                                                        </Border>

                                                    </Expander.Content>
                                                </Expander>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                 
                                </GroupBox.Content>
                            </GroupBox>-->
                            <GroupBox  ScrollViewer.VerticalScrollBarVisibility="Auto"
                                  ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                <GroupBox.Header>
                                    <Label Foreground="White">链路信息</Label>
                                </GroupBox.Header>
                                <GroupBox.Content>
                                    <ListBox x:Name="LineInfo"
                                             ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                             DataContext="{Binding SelectedNode}" ItemsSource="{Binding LineInfoOfNode}"
                                     MinHeight="200"
                                    ScrollViewer.VerticalScrollBarVisibility="Auto">
                                        <ListBox.Resources>
                                            <Style TargetType="ListBox">
                                                <Setter Property="Background" Value="Transparent"/>
                                            </Style>
                                        </ListBox.Resources>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Expander Visibility="{Binding IsVisible, Converter={StaticResource LinkInfoVisiableConverter}}" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                                    <Expander.Header>
                                                        <!--<Label Content="{Binding DataContext, 
                                                            RelativeSource={RelativeSource Mode=Self},
                                                            Converter={StaticResource LineNameConverter},
                                                            ConverterParameter={Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}}" Foreground="White"/>-->
                                                        <Label  Foreground="White" FontSize="12">
                                                            <Label.Content>
                                                                <MultiBinding Converter="{StaticResource LineNameConverter}">
                                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=Self}"/>
                                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}"/>
                                                                </MultiBinding>
                                                            </Label.Content>
                                                        </Label>
                                                    </Expander.Header>
                                                    <Expander.Content>
                                                        <Grid ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="1*"/>
                                                                <ColumnDefinition Width="1*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <!--pre node info-->
                                                            <GroupBox Background="{x:Null}" BorderBrush="White" BorderThickness="2" Grid.Column="0">
                                                                <GroupBox.Header>
                                                                    <Label Foreground="White">
                                                                        <Label.Content>
                                                                            <MultiBinding Converter="{StaticResource PreNameConverter}">
                                                                                <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=Self}"/>
                                                                                <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}"/>
                                                                            </MultiBinding>
                                                                        </Label.Content>
                                                                    </Label>
                                                                </GroupBox.Header>
                                                                <GroupBox.Content>
                                                                    <Grid ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>

                                                                        </Grid.RowDefinitions>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="0.6*"/>
                                                                            <ColumnDefinition Width="1*"/>
                                                                         
                                                                        </Grid.ColumnDefinitions>
                                                                        <Label Grid.Column="0" Grid.Row="0" Margin="5" Style="{StaticResource MLabel2Style}" FontSize="12">信号强度</Label>
                                                                        <TextBlock Grid.Column="1" Grid.Row="0" Margin="5" Foreground="Orange" VerticalAlignment="Center" FontSize="12">
                                                                            <TextBlock.Text>
                                                                                <MultiBinding Converter="{StaticResource InfoQualityConverter}">
                                                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext.PreInfoQuality" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext.BacInfoQuality" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                </MultiBinding>
                                                                            </TextBlock.Text>
                                                                        </TextBlock>

                                                                        <Label Grid.Column="0" Grid.Row="1" Margin="5" Style="{StaticResource MLabel2Style}" FontSize="12">底噪</Label>
                                                                        <TextBlock Grid.Column="1" Grid.Row="1" Margin="5" Foreground="Orange" VerticalAlignment="Center" FontSize="12">
                                                                            <TextBlock.Text>
                                                                                <MultiBinding Converter="{StaticResource WhiteInfoQualityConverter}">
                                                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext.PreWhiteInfoQuality" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext.BacWhiteInfoQuality" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                </MultiBinding>
                                                                            </TextBlock.Text>
                                                                        </TextBlock>
                                                                        <Label Grid.Column="0" Grid.Row="2" Margin="5" Style="{StaticResource MLabel2Style}" FontSize="12">信噪比</Label>
                                                                        <TextBlock Grid.Column="1" Grid.Row="2" Margin="5" Foreground="Orange" VerticalAlignment="Center" FontSize="12">
                                                                            <TextBlock.Text>
                                                                                <MultiBinding Converter="{StaticResource SignalNoiseRatioConverter}">
                                                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext.PreSignalNoiseRatio" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext.BacSignalNoiseRatio" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                </MultiBinding>
                                                                            </TextBlock.Text>
                                                                        </TextBlock>
                                                          
                                                                    </Grid>
                                                                </GroupBox.Content>
                                                               
                                                            </GroupBox>
                                                            <!--Bac node Info-->
                                                            <GroupBox Background="{x:Null}" BorderBrush="White" BorderThickness="2" Grid.Column="1">
                                                                <GroupBox.Header>
                                                                    <Label Foreground="White">
                                                                        <Label.Content>
                                                                            <MultiBinding Converter="{StaticResource BacNameConverter}">
                                                                                <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=Self}"/>
                                                                                <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}"/>
                                                                            </MultiBinding>
                                                                        </Label.Content>
                                                                    </Label>
                                                                </GroupBox.Header>
                                                                <GroupBox.Content>
                                                                    <Grid ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>

                                                                        </Grid.RowDefinitions>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="0.6*"/>
                                                                            <ColumnDefinition Width="1*"/>

                                                                        </Grid.ColumnDefinitions>
                                                                        <Label Grid.Column="0" Grid.Row="0" Margin="5" Style="{StaticResource MLabel2Style}" FontSize="12">信号强度</Label>
                                                                        <TextBlock Grid.Column="1" Grid.Row="0" Margin="5" Foreground="Orange" VerticalAlignment="Center" FontSize="12">
                                                                            <TextBlock.Text>
                                                                                <MultiBinding Converter="{StaticResource SInfoQualityConverter}">
                                                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext.PreInfoQuality" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext.BacInfoQuality" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                </MultiBinding>
                                                                            </TextBlock.Text>
                                                                        </TextBlock>

                                                                        <Label Grid.Column="0" Grid.Row="1" Margin="5" Style="{StaticResource MLabel2Style}" FontSize="12">底噪</Label>
                                                                        <TextBlock Grid.Column="1" Grid.Row="1" Margin="5" Foreground="Orange" VerticalAlignment="Center" FontSize="12">
                                                                            <TextBlock.Text>
                                                                                <MultiBinding Converter="{StaticResource SWhiteInfoQualityConverter}">
                                                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext.PreWhiteInfoQuality" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext.BacWhiteInfoQuality" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                </MultiBinding>
                                                                            </TextBlock.Text>
                                                                        </TextBlock>
                                                                        <Label Grid.Column="0" Grid.Row="2" Margin="5" Style="{StaticResource MLabel2Style}" FontSize="12">信噪比</Label>
                                                                        <TextBlock Grid.Column="1" Grid.Row="2" Margin="5" Foreground="Orange" VerticalAlignment="Center" FontSize="12">
                                                                            <TextBlock.Text>
                                                                                <MultiBinding Converter="{StaticResource SSignalNoiseRatioConverter}">
                                                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext.PreSignalNoiseRatio" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext.BacSignalNoiseRatio" RelativeSource="{RelativeSource Mode=Self}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                                </MultiBinding>
                                                                            </TextBlock.Text>
                                                                        </TextBlock>

                                                                    </Grid>
                                                                </GroupBox.Content>

                                                            </GroupBox>

                                                        </Grid>
                                                        
                                                    </Expander.Content>
                                                </Expander>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>

                                </GroupBox.Content>
                            </GroupBox>
                        </StackPanel>


                    </ScrollViewer>
                   

                </Grid>
            </Expander.Content>
            
        </Expander>
    </Grid>
</UserControl>
