<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:converter="clr-namespace:Applications.ComMonitor"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--RadioButton-->
    <Style TargetType="RadioButton" x:Key="MRadioButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Image Source="./images/RadioButton.png"/>
                        <Image Name="SelectedBack" Source="./images/RadioButtonBack.png" Visibility="Hidden"/>
                        <TextBlock Text="{TemplateBinding Content}" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="SelectedBack"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" Value="Hidden" TargetName="SelectedBack"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="RadioButton" x:Key="MRadioButtonNonFStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        
                        <Image Name="SelectedBack" Source="./images/RadioButtonBack.png" Visibility="Hidden"/>
                        <TextBlock TextAlignment="Center"
                                Width="{TemplateBinding Width}"
                                   Text="{TemplateBinding Content}" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="SelectedBack"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" Value="Hidden" TargetName="SelectedBack"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="RadioButton" x:Key="MRadioButtonGroupStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Image x:Name="RBBackground" 
                               Source="./images/RadioButtonBackground.png"
                               Grid.Column="0"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                        <Image x:Name="RBForeground"
                               Source="./images/RadioButtonForeground.png"
                               Grid.Column="0"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                        <TextBlock Text="{TemplateBinding Content}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Grid.Column="1"
                                   Foreground="White"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="RBForeground"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" Value="Hidden" TargetName="RBForeground"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--TabControl Style-->
    <!--<Style TargetType="TabControl" x:Key="TabControlStyle">-->
    <Style TargetType="TabControl">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Padding="10">
                            <TabPanel IsItemsHost="True" />
                        </Border>
                        <Border Grid.Row="1"
                               BorderBrush="Gray"
                               Padding="10"
                               BorderThickness="0">
                            <ContentPresenter ContentSource="SelectedContent" 
                                             Name="PART_SelectedContentHost"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Border Style-->
    <Style x:Key="MBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="#33FFFFFF" />
        <Setter Property="Opacity" Value="0.8" />
        <Setter Property="CornerRadius" Value="12,12,12,12" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>
    <!--Button Style-->
    <Style TargetType="Button" x:Key="MRButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image Source="./images/RadioButton.png"/>
                        <Image Name="SelectedBack" Source="./images/RadioButtonBack.png" Visibility="Hidden"/>
                        <TextBlock Text="{TemplateBinding Content}" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="SelectedBack"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter Property="Visibility" Value="Hidden" TargetName="SelectedBack"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    
    <Style TargetType="Button" x:Key="MButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        
                        <Image Source="./images/ButtonBackGround.png" />
                        <Image  Name="SelectedBack" Source="./images/RadioButtonBack.png" Visibility="Hidden"/>
                        <TextBlock Grid.Column="1" Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <Rectangle Name="Mask" Fill="#55FFFFFF"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="SelectedBack"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" Value="Hidden" TargetName="SelectedBack"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Visible" TargetName="Mask"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Visibility" Value="Hidden" TargetName="Mask"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--CheckBox Style-->
    <converter:HeightConverter x:Key="HeightConverter"/>
    
    <Style TargetType="{x:Type CheckBox}" x:Key="MCheckBoxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.6*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Image x:Name="BackGround" Source="./images/CheckBox.png" Grid.Column="0"  VerticalAlignment="Center"  Height="{TemplateBinding Height,Converter={StaticResource HeightConverter}}"/>
                        <Image x:Name="CheckSign" Source="./images/check.png" Visibility="Hidden"   VerticalAlignment="Center"  Grid.Column="0" Height="{TemplateBinding Height,Converter={StaticResource HeightConverter}}"/>
                        <Label x:Name="CheckName" Foreground="White" VerticalAlignment="Center" Height="{TemplateBinding Height}" Content="{TemplateBinding Content}" Grid.Column="1" FontSize="{TemplateBinding FontSize}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" Value ="Visible" TargetName="CheckSign"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" Value ="Hidden" TargetName="CheckSign"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Label Style-->
    <Style TargetType="{x:Type Label}" x:Key="MLabelStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <Image Source="./images/LabelBackGround.png"/>
                        <TextBlock Text="{TemplateBinding Content}"
                                   FontSize="{TemplateBinding FontSize}"
                                   TextWrapping="WrapWithOverflow"
                                   Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--TextBox Style-->
    <Style TargetType="{x:Type TextBox}" x:Key="MTextBoxStyle">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource=".\images\TextBoxBackGround.png"  Stretch="UniformToFill"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style TargetType="{x:Type PasswordBox}" x:Key="MPasswordBoxStyle">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource=".\images\TextBoxBackGround.png"  Stretch="UniformToFill"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <!--<Style TargetType="{x:Type ComboBox}" x:Key="MComboBoxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type ComboBox}">
                    <TextBox Foreground="White">
                        <TextBox.Background>
                            <ImageBrush ImageSource=".\images\TextBoxBackGround.png"  Stretch="UniformToFill"/>
                        </TextBox.Background>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--TabItem Style-->
    <Style TargetType="{x:Type TabItem}">
        <!--<Setter Property="Width">
            <Setter.Value>
                85
            </Setter.Value>
        </Setter>-->
        <Setter Property="Height">
            <Setter.Value>
                24
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Image Source="./images/RadioButton.png"/>
                        <Image Name="Selected" Source="./images/RadioButtonBack.png" Visibility="Hidden"/>
                        <TextBlock Text="{TemplateBinding Header}" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="Selected"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Visibility" Value="Hidden" TargetName="Selected"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Scroll View-->
    <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#777" Offset="0.0"/>
                <GradientStop Color="#000" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Background" Value="#ffffff"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}" x:Key="ScrollViewerStyleKey">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <DockPanel Margin="{TemplateBinding Padding}">
                            <!--<ScrollViewer DockPanel.Dock="Top"
              HorizontalScrollBarVisibility="Hidden"
              VerticalScrollBarVisibility="Hidden"
              Focusable="false">
                                <Border CornerRadius="4" Background="{StaticResource DefaultedBorderBrush}" Padding="4" Margin="0,4,0,4">
                                    <GridViewHeaderRowPresenter Margin="2,0,2,0"
                Columns="{Binding Path=TemplatedParent.View.Columns,RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}"
                AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>

                            </ScrollViewer>-->

                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
              KeyboardNavigation.DirectionalNavigation="Local"/>
                        </DockPanel>

                        <ScrollBar Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
            Grid.Row="1"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Value="{TemplateBinding HorizontalOffset}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                        <ScrollBar Name="PART_VerticalScrollBar"
            Grid.Column="1"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Value="{TemplateBinding VerticalOffset}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ScrollBar -->

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border 
          x:Name="Border"
          Margin="1" 
          CornerRadius="4" 
          Background="{x:Null}"
          BorderBrush="{x:Null}"
          BorderThickness="4">
                        <Path 
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="#404040"
            Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border 
          CornerRadius="1"
          BorderThickness="1" Background="#FF121212" BorderBrush="#FFCECECE" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0" Width="Auto" >
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" Height="0.409*"/>
                <RowDefinition Height="0.182*"/>
                <RowDefinition MaxHeight="18" Height="0.409*"/>
            </Grid.RowDefinitions>
            <Border
      Grid.RowSpan="3"
      CornerRadius="2" 
      Background="#FFFFFF" Margin="15,22,15,22" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            <RepeatButton 
      Grid.Row="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Height="32"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" Margin="10,0,10,0" />
            <Track 
      x:Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="10,0,10,0"  
          Background="#1d2088"
          BorderBrush="#1d2088" Height="Auto" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="14" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton 
      Grid.Row="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Height="20"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z" Margin="10,0,10,0"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="18"/>
            </Grid.ColumnDefinitions>
            <Border
      Grid.ColumnSpan="3"
      CornerRadius="2" 
      Background="#FFFFFF" Margin="22,15,22,15" />
            <RepeatButton 
      Grid.Column="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" Margin="0,10,0,10" />
            <Track 
      x:Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="0,10,0,10"  
          Background="#1d2088"
          BorderBrush="#1d2088" Height="14" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton 
      Grid.Column="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z" Margin="0,10,0,10"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>